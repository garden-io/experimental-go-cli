# Javascript Node CircleCI 2.1 configuration file
version: 2.1

# Shared config to use between jobs
# These can be used to inject shared variables
# see https://blog.daemonl.com/2016/02/yaml.html
.references:
  # Go configuration for all our jobs
  go-config: &go-config
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/garden-io/experimental-go-cli

  # Only run jobs on master
  only-master: &only-master
    filters:
      branches:
        only: master
      tags:
        ignore: /.*/

  # Only run on versioned tags
  only-tags: &only-tags
    filters:
      branches:
        ignore: /.*/
      tags:
        # Technically could be a better regex but for now just starting with v feels good enough
        only: /v.*/

# Reuseable commands to execute in jobs
# see https://circleci.com/docs/2.0/configuration-reference/#commands-requires-version21
# and example https://github.com/mapbox/mapbox-gl-native/blob/master/circle.yml
commands:
  go_install_deps:
    description: |
      Installs our go dependancies and deals with caching and loading the cache
    steps:
      - restore_cache:
          keys:
            - pkg-cache-{{ checksum "Gopkg.lock" }}
      - run: go get -u github.com/jstemmer/go-junit-report
      - run:
          name: Install dep
          command: |
            if [ ! -d /go/src/github.com/garden-io/experimental-go-cli/vendor ]; then
                # This needs to match the version installed locally
                curl -L -s https://github.com/golang/dep/releases/download/v0.5.0/dep-linux-amd64 -o /go/bin/dep
                chmod +x /go/bin/dep
                /go/bin/dep ensure
            fi
      - save_cache:
          key: pkg-cache-{{ checksum "Gopkg.lock" }}
          paths:
            - "/go/src/github.com/garden-io/experimental-go-cli/vendor"

#
# Jobs section
#
jobs:
  test-cli:
    <<: *go-config
    steps:
      - checkout
      - go_install_deps
      - run:
          name: Unit Tests
          command: |
            cd garden-cli
            go test -v 2>&1 | go-junit-report > /tmp/report.xml
      - store_artifacts:
          path: /tmp/report.xml
      - store_test_results:
          path: /tmp/
  build-cli:
    <<: *go-config
    steps:
      - checkout
      - go_install_deps
      - run: go get -u github.com/goreleaser/goreleaser
      - run:
          name: Build Go cli
          command: |
            cd garden-cli
            # Set to snapshot builds unless we are on a git tag
            FLAGS="--snapshot"
            if [[ -n "$CIRCLE_TAG" ]]; then
              FLAGS=""
            fi
            # Build them all
            goreleaser $FLAGS --rm-dist
      - store_artifacts:
          path: garden-cli/dist/
          destination: /downloads

# NOTE: The build-cli and test-cli steps always fail in CI with the error:
#
# # github.com/garden-io/experimental-go-cli/vendor/github.com/havoc-io/mutagen/pkg/session
#   ../vendor/github.com/havoc-io/mutagen/pkg/session/controller.go:113:25: undefined: mutagen.VersionMajor
#   ../vendor/github.com/havoc-io/mutagen/pkg/session/controller.go:114:25: undefined: mutagen.VersionMinor
#   ../vendor/github.com/havoc-io/mutagen/pkg/session/controller.go:115:25: undefined: mutagen.VersionPatch
#
# However, it does work locally. Moreover, it does work locally inside a circleci/golang:1.10 Docker container.
# Not sure why it keeps failing in CI.
#
# Therefore we've commented out these steps since this is just an experimental package and not supported at the moment.
# workflows:
#   version: 2
#   commit:
#     jobs:
#       - test-cli
#
#   master:
#     jobs:
#       # Duplicated here so we can reference steps that depends on it
#       - build-cli:
#           <<: *only-master
#
#   tags:
#     jobs:
#       # Duplicated here so we can reference steps that depends on it
#       - build-cli:
#           <<: *only-tags
